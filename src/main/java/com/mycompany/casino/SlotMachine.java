/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.casino;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;



/**
 *
 * @author mor
 */
public class SlotMachine extends javax.swing.JFrame implements ActionListener {
    String[] item ={"cherry","lemon", "diamond", "horseshoe" , "seven"};
    Timer timer;
    private Player player;
    private mainWindow mw;
    private balancePalet bp;
    private int betSum;
    private int count , total , prize;
    private int slot1, slot2, slot3;
    private int cherry = 0,lemon = 0, diamond = 0, horseshoe = 0, seven = 0;
    private boolean duringAgame = false;
    
    /**
     * Creates new form SlotMachine
     */
    /**
     * Creates new form SlotMachine1
     */
    public SlotMachine(Player a, mainWindow mw) {
        timer = new Timer(130, this);
        this.mw = mw;
        player = a;
        initComponents();
        bp.wallet = player.getBalance();
        balancePalet1.updateBalance();
    }
    
    public void setNewWallet(){
        bp.wallet = player.getBalance();
        balancePalet1.updateBalance();
    }
    
    public int getSymbol(){
        int x = (int)(Math.random() * 20);
        if(x < 6){
            x = 0;
        }
        else if(x >= 6 && x < 11){
            x = 1;
        }
        else if(x >= 11 && x < 15){
            x = 2;
        }
        else if(x >= 15 && x < 18){
            x = 3;
        }
        else if(x == 18 || x == 19){
            x = 4;
        }
        
        return x;
    }
    
    public void symbolCalcul(int x){
        switch (x) {
                case 0:
                  cherry++;
                  break;
                case 1:
                  lemon++;
                  break;
                case 2:
                  diamond++;
                  break;
                case 3:
                  horseshoe++;
                  break;
                case 4:
                  seven++;
                  break;  
    }
    }
    
    public int prizeCal(){
        int x;
        if(cherry == 3){
            x = 10;
        }
        else if(cherry == 2){
            x = 5;
        }
        else if(lemon == 3){
            x = 20;
        }
        else if(lemon == 2){
            x = 10;
        }
        else if(diamond == 3){
            x = 40;
        }
        else if(diamond == 2){
            x = 20;
        }
        else if(horseshoe == 3){
            x = 100;
        }
        else if(horseshoe == 2){
            x = 50;
        }
        else if(seven == 3){
            x = 1000;
        }
        else if(seven == 2){
            x = 500;
        }
        else{
            x = 0;
        }
        return x;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSpin = new javax.swing.JButton();
        balancePalet1 = new com.mycompany.casino.balancePalet();
        labelWin3 = new javax.swing.JLabel();
        labelWin1 = new javax.swing.JLabel();
        labelWin2 = new javax.swing.JLabel();
        betButtons1 = new com.mycompany.casino.BetButtons();
        jLabel1 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Slot Machine");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSpin.setText("Spin");
        btnSpin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpinActionPerformed(evt);
            }
        });
        getContentPane().add(btnSpin, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 110, 60));
        getContentPane().add(balancePalet1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 14, -1, -1));

        labelWin3.setBackground(new java.awt.Color(255, 255, 255));
        labelWin3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/horseshoe.png"))); // NOI18N
        getContentPane().add(labelWin3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 130, 200));

        labelWin1.setBackground(new java.awt.Color(255, 255, 255));
        labelWin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/horseshoe.png"))); // NOI18N
        getContentPane().add(labelWin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 130, 200));

        labelWin2.setBackground(new java.awt.Color(255, 255, 255));
        labelWin2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/horseshoe.png"))); // NOI18N
        getContentPane().add(labelWin2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 130, 200));
        getContentPane().add(betButtons1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 160, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slot.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 830, 350));

        backBtn.setText("BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 410, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSpinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpinActionPerformed
        // TODO add your handling code here:
        btnSpin.setEnabled(false);
        duringAgame = true;
        betSum = betButtons1.getBetSum();
        bp.wallet = bp.wallet - betSum; 
        player.setWallet(bp.wallet);
        balancePalet1.updateBalance(); 
        cherry = 0;
        lemon = 0;
        diamond = 0;
        horseshoe = 0;
        seven = 0;
        
        if(bp.wallet >= betSum){
            count = 0; 
            total = 0;
            timer.start(); 
        }
        else{
            
            JOptionPane.showMessageDialog(this,"insufficient funds :(", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSpinActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        if(duringAgame == false){
            mw.setNewWallet();
            mw.setVisible(true);
            this.setVisible(false);
        }
        else{
            JOptionPane.showMessageDialog(this,"You can't leave during a game", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private com.mycompany.casino.balancePalet balancePalet1;
    private com.mycompany.casino.BetButtons betButtons1;
    private javax.swing.JButton btnSpin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelWin1;
    private javax.swing.JLabel labelWin2;
    private javax.swing.JLabel labelWin3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if(count < 31){
            count = count + 1;
            if(count < 11){
                slot1 = getSymbol();
                labelWin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/"+ item[slot1] +".png")));
            }
            if(count < 21){
                slot2 = getSymbol();
                labelWin2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/"+ item[slot2] +".png")));
            }       
            slot3 = getSymbol();
            labelWin3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/"+ item[slot3] +".png")));
         
        }
        else{
            symbolCalcul(slot1);
            symbolCalcul(slot2);
            symbolCalcul(slot3);
            prize = prizeCal();
            if(prize != 0){
               bp.wallet = bp.wallet + (betSum * prize); 
               player.setWallet(bp.wallet);
               balancePalet1.updateBalance();  
               Component frame = null;
               JOptionPane.showMessageDialog(frame,"YOU WON $" + betSum * prize + "" , "Winning message", JOptionPane.INFORMATION_MESSAGE);
               duringAgame = false;
               btnSpin.setEnabled(true);
               timer.stop();
            }
            else{
               
               duringAgame = false;
               btnSpin.setEnabled(true);
               timer.stop();
            }
        }  
        }
    }        


